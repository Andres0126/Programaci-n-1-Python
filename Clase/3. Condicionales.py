# -*- coding: utf-8 -*-
"""Condicionales.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zhBFS_1uHdGXNtcsrqAus7DvTXO1Ez33

# CONDICIONAL IF

¿Cómo hacer que cierta parte del programa se ejecute o deje de hacerlo en función de una condición determinada?

Para escribir programas, es muy comun necesitar de comprobar *condiciones* y cambiar el comportamiento del programa de acuerdo a estas. Las **sentencias condicionales** nos dan esta capacidad. Para esto vamos a utilizar la sentencia `if`


```
if (x >= 0):
  print(x, " es mayor que cero") # proceso B
else:
  print(x, " es menor que cero")
```
Al llegar a este punto, ejecuta el proceso B, sólo si esta condición es cierta. De lo contrario, continua.

Realice un algoritmo que realice la división de dos números `a`(divisor) y `b`(dividiendo), donde `a`es el divisor) y `b`es el dividiendo. En caso de que `a`sea igual a 0, generar un mensaje de *operación no posible en los reales*.

Los números deben ser ingresados por el usuario por el teclado.
"""

a = float(input("Ingrese el divisor: "))
b = float(input("Ingrese el dividiendo: "))
resultado = 0

if (a!=0):
  resultado = b/a
  print("Resultado de la división", resultado)
else:
  print("La operación no es posible en R")
#%%
a = float(input("Ingrese el divisor: "))
b = float(input("Ingrese el dividiendo: "))
resultado = 0

if (a==0):
  print("La operación no es posible en R")
else:
  resultado = b/a
  print("Resultado de la división: ", resultado)
  
#%%
"""#Operadores de pertencencia"""

x = 1
y = 0
lista = [10, 0, -5, 30]

if x not in lista:
  print("x NO esta presente en la lista")
else:
  print("x esta presente en la lista")

if y in lista:
  print(f"{y} esta presente en la lista: {lista}")
else:
  print("y NO esta presente en la lista")
  
#%%
"""# Operadores ternarios

Tambien son conocidos como expresiones condicionales, y son operadores que evaluan algo basados sobre una condicion que puede ser `True` o `False`

Lo interesante es que se ejecutan en **una linea**

```
[si_True] if [expresion] else [si_False]
```
"""

x, y = -1, 1

min = x if x<y else y   # guardamos el valor minimo
print(min)
# Equivalentemente

if x<y:
  min = x
else:
  min = y

print(min)
#%%
"""# Ejercicio 1
Diseño un algoritmo para calcular el pago neto de un trabajador a partir del número de horas trabajadas y la tarifa horaria, y que realice las deducciones de salud y pensión.
"""

# escribir codigo
#%%
"""Igualmente, si el salario bruto del empleado es mayor que 10 millones de pesos al mes, se desea que el algoritmo deduzca el impuesto a la renta al salario bruto de la siguiente forma:

Impuesto a la renta = 2%*( salario bruto - 10 millones de peso )

"""
#%%
# escribir codigo

"""Igualmente, se desea que el algoritmo deduzca el impuesto a la renta de forma incremental y diferenciada, de acuerdo a la siguiente forma:

Si el salario bruto es mayor que 10 millones, el impuesto a la renta = 2%*(salario bruto - 10 millones de peso )

Si el salario bruto es mayor que 20 millones, el impuesto a la renta = 3%*(salario bruto - 10 millones de peso )

Si el salario bruto es mayor que 50 millones, el impuesto a la renta = 4%*(salario bruto - 10 millones de peso )

"""

# escribir codigo


#%%
"""# Ejercicio 2

Diseñar un algoritmo para resolver una ecuación de segundo grado `ax^2+bx+c`. Dicho algoritmo debe considerar los tres posibles:

1. El polinomio no tiene raíces reales, es decir, que el polinomio tenga raíces complejas
2. El polinomio tiene dos raíces iguales
3. El polinomio tiene dos raíces reales diferentes"""

